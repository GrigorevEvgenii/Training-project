{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Dialogs/Dialogs.module.css","components/Users/Users.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","img/user.png","components/Header/Header.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.module.css","img/Spinner.svg","components/Dialogs/DialogsItem/DialogsItem.module.css","components/Dialogs/MessagesItem/MessagesItem.module.css","api/api.js","Redux/profileReducer.js","Redux/dialogsReducer.js","Redux/usersReducer.js","Redux/authReducer.js","Redux/store-redux.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Navbar.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/MyPosts/MyPosts.jsx","Preloader.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/MessagesItem/MessagesItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Users/Users.jsx","components/Users/UsersContainer.jsx","App.js","index.js"],"names":["module","exports","instanceOfAxios","axios","withCredentials","baseURL","headers","usersAPI","currentPage","pageSize","get","userID","delete","post","authAPI","initialState","posts","id","text","likesCount","profile","currentText","isFetching","profileReducer","state","action","type","newState","Object","assign","cloneDeep","length","dialogs","name","messages","message","currentMessageBody","dialogsReducer","messageBody","users","setUsers","totalCount","toggleFetching","setCurrentPage","usersReducer","map","item","userId","followed","email","login","isAuth","setUserData","authReducer","reducers","combineReducers","profilePage","dialogsPage","usersPage","auth","store","createStore","applyMiddleware","thunkMiddleware","window","Header","props","className","s","header","img","src","to","HeaderContainer","this","getHeader","React","Component","connect","dispatch","then","response","data","Navbar","nav","navItem","href","Post","MyPostsContainer","newText","value","newPostHandler","postsElements","title","subtitle","AddNewPostContainer","PostInputLabel","PostInput","onChange","event","target","rows","AddPostBtn","onClick","Preloader","loader","ProfileInfo","imgContainer","photos","large","defaultAvatar","description","Profile","console","log","ProfileContainer","match","params","getUserProfile","WithUrlProfileContainer","withRouter","DialogsItem","path","MessagesItem","Dialogs","dialogsElements","dialog","messagesElements","DialogsItems","Messages","SendMessage","SendMessageArea","updateNewMessageHandler","sendMessageHandler","SendMessageBtn","DialogsContainer","Users","pageButtons","handlePreviousPageClick","handleNextPageClick","userContainer","photoContainer","small","alt","photo","handleUnfollow","button","handleFollow","aboutUserContainer","userDescriptionContainer","userName","userStatus","status","locationContainer","userCountry","userCity","UsersContainer","handlePageButtonClick","PageButtonClick","arrowPageButtonClick","getUsers","pagesCount","Math","ceil","i","push","pageButton","selectedPageButton","followUser","unFollowUser","UsersContainerAPI","items","App","render","ReactDOM","document","getElementById","getState"],"mappings":"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","file":"static/js/main.118c16a9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"navItem\":\"Navbar_navItem__16nSi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3tZ1c\",\"title\":\"MyPosts_title__3q_Ko\",\"subtitle\":\"MyPosts_subtitle__2xs3s\",\"PostInputLabel\":\"MyPosts_PostInputLabel__c--yl\",\"PostInput\":\"MyPosts_PostInput__1Ljwk\",\"AddPostBtn\":\"MyPosts_AddPostBtn__2pdsB\",\"AddNewPostContainer\":\"MyPosts_AddNewPostContainer__2sPCl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialogs\":\"Dialogs_Dialogs__1HvdP\",\"DialogsItems\":\"Dialogs_DialogsItems__LIXpe\",\"Messages\":\"Dialogs_Messages__2OSA1\",\"SendMessage\":\"Dialogs_SendMessage__1NwkL\",\"SendMessageArea\":\"Dialogs_SendMessageArea__HC-UV\",\"SendMessageBtn\":\"Dialogs_SendMessageBtn__3of2E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__2Iv27\",\"pageButtons\":\"Users_pageButtons__1q9F3\",\"pageButton\":\"Users_pageButton__1ZjBo\",\"selectedPageButton\":\"Users_selectedPageButton__3I9sU\",\"userContainer\":\"Users_userContainer__1Ycei\",\"aboutUserContainer\":\"Users_aboutUserContainer__Tb5P-\",\"userDescriptionContainer\":\"Users_userDescriptionContainer__2XS4y\",\"locationContainer\":\"Users_locationContainer__1oxmJ\",\"photoContainer\":\"Users_photoContainer__2PJTc\",\"photo\":\"Users_photo__2hOPg\",\"button\":\"Users_button__1saaY\",\"userName\":\"Users_userName__1mt5V\",\"userStatus\":\"Users_userStatus__3dsIO\",\"userCountry\":\"Users_userCountry__6nBlk\",\"userCity\":\"Users_userCity__2cNhS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileInfo\":\"ProfileInfo_ProfileInfo__34LEF\",\"imgContainer\":\"ProfileInfo_imgContainer__1Au_4\",\"img\":\"ProfileInfo_img__1lpBU\"};","module.exports = __webpack_public_path__ + \"static/media/user.da338dae.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"img\":\"Header_img__3ifQS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__3HF8E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__A0EJd\"};","module.exports = __webpack_public_path__ + \"static/media/Spinner.9064981b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DialogsItem\":\"DialogsItem_DialogsItem__16bfh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MessagesItem\":\"MessagesItem_MessagesItem__34gIN\"};","import * as axios from 'axios'\n\nlet instanceOfAxios = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {\n        'API-KEY': 'c891f102-d06b-46c8-81d4-a7cd4255c13b',\n    }\n\n});\n\nexport let usersAPI = {\n    getUsers(currentPage = 1, pageSize = 5) {\n        return instanceOfAxios.get(`users?page=${currentPage}&count=${pageSize}`);\n    },\n\n    getProfile(userID) {\n       return instanceOfAxios.get(`profile/${userID}`);\n    },\n\n    getHeader() {\n        return instanceOfAxios.get(`auth/me`);\n    },\n\n    unFollowUser(userID) {\n        return instanceOfAxios.delete(`follow/${userID}`);\n    },\n\n    followUser(userID) {\n        return instanceOfAxios.post(`https://social-network.samuraijs.com/api/1.0/follow/${userID}`)\n    },\n}\n\nexport let authAPI = {\n    auth() {\n        return instanceOfAxios.get(`auth/me`);\n    },\n}","import {cloneDeep} from \"lodash\";\nimport {usersAPI} from \"../api/api\";\n\nconst ADD_POST = \"ADD_POST\";\nconst NEW_TEXT = \"NEW_TEXT\";\nconst TOGGLE_FETCHING = \"TOGGLE_FETCHING\";\nconst SET_PROFILE = \"SET_PROFILE\";\n\nconst initialState = {\n    posts: [{\n            id: 1,\n            text: 'Hi, how are you?',\n            likesCount: 12\n        },\n        {\n            id: 2,\n            text: 'It\\'s my first post',\n            likesCount: 11\n        },\n        {\n            id: 3,\n            text: 'Blabla',\n            likesCount: 3\n        },\n        {\n            id: 4,\n            text: 'Dada',\n            likesCount: 11\n        }\n    ],\n    profile: null,\n    currentText: \"Some text\",\n    isFetching: true,\n}\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case NEW_TEXT: {\n            let newState = Object.assign({}, state);\n            newState.currentText = action.text;\n\n            return newState;\n        }\n        case ADD_POST: {\n            let newState = cloneDeep(state);\n            newState.posts = [...state.posts, {\n                id: state.posts.length + 1,\n                text: state.currentText,\n                likesCount: state.posts.length + 1,\n            }];\n            newState.currentText = \"\";\n            debugger;   \n            return newState;\n        }\n        case SET_PROFILE: {\n            debugger;\n            return {...state, profile: action.profile}\n        }\n        case TOGGLE_FETCHING: {\n            return {\n                ...state,\n                isFetching: action.isFetching,\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport const addPostActionCreator = () => {\n    return {\n        type: ADD_POST,\n    }\n}\n\nexport const newTextActionCreator = (text) => {\n    return {\n        type: NEW_TEXT,\n        text: text,\n    }\n}\n\nexport const setProfile = (profile) => {\n    return {\n        type: SET_PROFILE,\n        profile,\n    }\n}\n\nexport const toggleFetching = (isFetching) => {\n    return {\n        type: TOGGLE_FETCHING,\n        isFetching,\n    }\n}\n\nexport const getUserProfile = (userID) => (dispatch) => {\n    usersAPI.getProfile(userID)\n        .then(response => {\n            dispatch(setProfile(response.data));\n            dispatch(toggleFetching(false));\n        });\n}\n\nexport default profileReducer;","import {cloneDeep} from 'lodash';\n\nconst UPDATE_NEW_MESSAGE_TEXT = \"UPDATE_NEW_MESSAGE_TEXT\";\nconst SEND_MESSAGE = \"SEND_MESSAGE\";\n\nconst initialState = {\n        dialogs: [\n            {id: 1, name: 'Dimych'},\n            {id: 2, name: 'Andrew'},\n            {id: 3, name: 'Sveta'},\n            {id: 4, name: 'Sasha'},\n            {id: 5, name: 'Viktor'},\n            {id: 6, name: 'Valera'}\n        ],\n        \n        messages: [\n            {id: 1, message: 'Hi'},\n            {id: 2, message: 'How is your it-kamasutra?'},\n            {id: 3, message: 'Yo'},\n            {id: 4, message: 'Yo'},\n            {id: 5, message: 'Yo'}\n        ],\n        currentMessageBody: \"\"\n}\n\nconst dialogsReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case UPDATE_NEW_MESSAGE_TEXT: {\n            let newState = cloneDeep(state);\n            newState.currentMessageBody = action.messageBody;\n            return newState;\n        }\n        case SEND_MESSAGE: {\n            let newState = cloneDeep(state);\n            newState.messages = [...state.messages, \n                {\n                    id: state.messages.length + 1, \n                    message: state.currentMessageBody\n                }];\n                newState.currentMessageBody = \"\";\n            return newState;\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport const updateNewMessageTextCreator = (text) => {\n    return {\n        type: UPDATE_NEW_MESSAGE_TEXT,\n        messageBody: text,\n    }\n}\n\nexport const sendMessageCreator = () => {\n    return {\n        type: SEND_MESSAGE,\n    }\n}\n\nexport default dialogsReducer;","import {usersAPI} from \"../api/api\";\n\nconst FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst TOGGLE_FETCHING = \"TOGGLE_FETCHING\";\nconst SET_PAGE_SIZE = \"SET_PAGE_SIZE\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\n\nconst initialState = {\n        users: [],\n        pageSize: 5,\n        currentPage: 1,\n        isFetching: true,\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case FOLLOW: {\n            return {\n                ...state,\n                users: state.users.map((item) => {\n                    if (item.id === action.userId) item.followed = true;\n                    return item;\n                }),\n            }\n        }\n        case UNFOLLOW: {\n            return {\n                ...state,\n                users: state.users.map((item) => {\n                    if (item.id === action.userId) item.followed = false;\n                    return item;\n                }),\n            }\n        }\n        case SET_USERS: {\n            return {\n                ...state,\n                users: action.users,\n                totalCount: action.totalCount,\n                currentPage: action.currentPage,\n            }\n        }\n        case TOGGLE_FETCHING: {\n            return {\n                    ...state,\n                    isFetching: action.isFetching,\n            }\n        }\n        case SET_CURRENT_PAGE: {\n            return {\n                ...state,\n                currentPage: action.currentPage,\n            }\n        }\n        default: return state;\n    }\n}\n\nexport const follow = (userId) => ({\n    type: FOLLOW, \n    userId \n})\nexport const unfollow = (userId) => ({\n    type: UNFOLLOW,\n    userId \n})\nexport const setUsers = (users, totalCount) => ({\n    type: SET_USERS,\n    users,\n    totalCount,\n})\nexport const toggleFetching = (isFetching) => ({\n    type: TOGGLE_FETCHING,\n    isFetching,\n});\nexport const setPagesize = (pageSize) => ({\n    type: SET_PAGE_SIZE,\n    pageSize,\n});\nexport const setCurrentPage = (currentPage) => ({\n    type: SET_CURRENT_PAGE,\n    currentPage,\n});\n\nexport const getUsers = (currentPage, pageSize) => (dispatch) => {\n    usersAPI.getUsers(currentPage, pageSize)\n        .then(response => {\n            dispatch(setUsers(response.data.items, response.data.totalCount));\n            dispatch(setCurrentPage(1));\n            dispatch(toggleFetching(false));\n        });\n}\n\nexport const PageButtonClick = (currentPage, pageSize) => (dispatch) => {\n    dispatch(toggleFetching(true));\n    usersAPI.getUsers(currentPage, pageSize)\n        .then(response => {\n            dispatch(setUsers(response.data.items, response.data.totalCount));\n            dispatch(setCurrentPage(currentPage));\n            dispatch(toggleFetching(false));\n        })\n}\n\nexport const arrowPageButtonClick = (currentPage, pageSize) => (dispatch) => {\n    dispatch(toggleFetching(true));\n    usersAPI.getUsers(currentPage, pageSize)\n        .then(response => {\n            dispatch(setUsers(response.data.items, response.data.totalCount));\n            dispatch(setCurrentPage(currentPage));\n            dispatch(toggleFetching(false));\n        });\n}\n\nexport const followUser = (userID) => (dispatch) => {\n    usersAPI.followUser(userID)\n        .then(response => {\n            dispatch(follow(userID));\n        })\n}\n\nexport const unFollowUser = (userID) => (dispatch) => {\n    usersAPI.unFollowUser(userID)\n        .then(response => {\n            dispatch(unfollow(userID));\n        });\n}\n\nexport default usersReducer;","import {cloneDeep} from 'lodash';\nimport {authAPI} from \"../api/api\";\n\nconst SET_USER_DATA = 'SET_USER_DATA';\n\nconst initialState = {\n    id: null,\n    email: null,\n    login: null,\n    isAuth: false\n}\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA: {\n            debugger;\n            return {\n                ...state,\n                id: action.id,\n                email: action.email,\n                login: action.login,\n                isAuth: true,\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport const setUserData = (profile) => {\n    return {\n        type: SET_USER_DATA,\n        id: profile.id,\n        email: profile.email,\n        login: profile.login,\n    }\n}\n\nexport const getHeader = () => (dispatch) => {\n    authAPI.auth()\n        .then(response => {\n            dispatch(setUserData(response.data.data));\n        });\n}\n\nexport default authReducer;","import {createStore, combineReducers, applyMiddleware} from \"redux\";\nimport profileReducer from \"./profileReducer\";\nimport dialogsReducer from \"./dialogsReducer\";\nimport usersReducer from \"./usersReducer\";\nimport authReducer from \"./authReducer\";\nimport thunkMiddleware from \"redux-thunk\";\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    usersPage: usersReducer,\n    auth: authReducer,\n});\n\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nwindow.store = store;\n\nexport default store;","import React from 'react';\r\nimport s from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img className={s.img} src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n\r\n        {props.isAuth ? props.login : <NavLink to={'/login'}>login</NavLink>}\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport {connect} from 'react-redux';\r\nimport {setUserData, getHeader} from '../../Redux/authReducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    componentDidMount() {\r\n        this.props.getHeader();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Header isAuth={this.props.isAuth} login={this.props.login}/>\r\n        );\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {setUserData, getHeader})(HeaderContainer);","import React from 'react';\r\nimport s from \"./Navbar.module.css\";\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.navItem}>\r\n                <NavLink to=\"/Profile\">Profile</NavLink>\r\n            </div>\r\n            <div className={s.navItem}>\r\n                <NavLink to=\"/Dialogs\">Messages</NavLink>\r\n            </div>\r\n            <div className={s.navItem}>\r\n                <NavLink to=\"/Users\">Messages</NavLink>\r\n            </div>\r\n            <div className={s.navItem}>\r\n                <a href=\"#\">News</a>\r\n            </div>\r\n            <div className={s.navItem}>\r\n                <a href=\"#\">Music</a>\r\n            </div>\r\n            <div className={s.navItem}>\r\n                <a href=\"#\">Settings</a>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nexport const Post = (props) => {\r\n  return (\r\n    <div className={s.post}>\r\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n        {props.text}\r\n      <div>\r\n        <span>like { props.likesCount }</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import {MyPosts} from \"./MyPosts\";\r\nimport {addPostActionCreator, newTextActionCreator} from \"../../../Redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    currentText: state.profilePage.currentText,\r\n    posts: state.profilePage.posts,\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    newText: (value) => {\r\n      dispatch(newTextActionCreator(value));\r\n    },\r\n    newPostHandler: () => {\r\n      dispatch(addPostActionCreator());\r\n    },\r\n  }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport {Post} from \"./Post/Post\";\r\n\r\nexport const MyPosts = (props) => {\r\n  let postsElements = props.posts.map((item) => <Post text={item.text} likesCount={item.likesCount}/>);\r\n  \r\n  const newPostHandler = () => {\r\n    props.newPostHandler();\r\n  }\r\n  \r\n  const newText = (event) => {\r\n    props.newText(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className={s.posts}>\r\n      <div className={s.title}>\r\n        <span className={s.subtitle}>My posts:</span>\r\n      </div>\r\n\r\n      {postsElements}\r\n\r\n      <div className={s.AddNewPostContainer}>\r\n        <label className={s.PostInputLabel}>\r\n          New Post\r\n          <br />\r\n          <textarea className={s.PostInput} onChange={newText} value={props.currentText} rows=\"4\" />\r\n        </label>\r\n        <button className={s.AddPostBtn} onClick={newPostHandler}>Добавить запись</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\nimport loader from '../src/img/Spinner.svg';\n\nlet Preloader = () => {\n    return (\n        <div>\n            <img src={loader} />\n        </div>\n    );\n}\n\nexport default Preloader;","import React from 'react';\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from '../../../Preloader';\r\nimport defaultAvatar from \"../../../img/user.png\";\r\n\r\nexport const ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n      return <Preloader />\r\n  }\r\n  \r\n  return (\r\n    <div className={s.ProfileInfo}>\r\n      <div className={s.imgContainer}>\r\n        <img className={s.img} src={props.profile.photos.large ? props.profile.photos.large : defaultAvatar} />\r\n      </div>\r\n      <div className={s.description}>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport s from \"./Profile.module.css\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  debugger;\r\n  console.log(props);\r\n  return (\r\n    <div className={s.Profile}>\r\n      <ProfileInfo profile={props.profile} />\r\n        <div>\r\n          <MyPostsContainer />\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React, { Fragment } from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getUserProfile} from '../../Redux/profileReducer';\r\nimport Preloader from '../../Preloader';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userID = this.props.match.params.userID;\r\n    if (!userID) userID = 2;\r\n    this.props.getUserProfile(userID);\r\n}\r\n  \r\n  render() {\r\n    return(\r\n      <Fragment>\r\n        { this.props.isFetching ? <Preloader /> : null}\r\n        <Profile {...this.props} profile={this.props.profile} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n      isFetching: state.profilePage.isFetching,\r\n      profile: state.profilePage.profile,\r\n      id: state.auth.id,\r\n  }\r\n}\r\n\r\nlet WithUrlProfileContainer = withRouter(ProfileContainer);\r\n\r\nexport default connect(mapStateToProps, {getUserProfile})(WithUrlProfileContainer);","import React from \"react\";\r\nimport s from \"./DialogsItem.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const DialogsItem = (props) => {\r\n    const path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.DialogsItem}>\r\n            <NavLink to={path}>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport s from \"./MessagesItem.module.css\";\r\n\r\nexport const MessagesItem = (props) => {\r\n    return (\r\n        <div className={s.MessagesItem}>\r\n            {props.message}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport s from \"./Dialogs.module.css\";\r\nimport {DialogsItem} from \"./DialogsItem/DialogsItem\";\r\nimport {MessagesItem} from \"./MessagesItem/MessagesItem\";\r\n\r\nexport const Dialogs = (props) => {\r\n    const dialogsElements = props.dialogs.map((dialog) => <DialogsItem name={dialog.name} id={dialog.id} />);\r\n    const messagesElements = props.messages.map((message) => <MessagesItem id={message.id} message={message.message}/>);\r\n    const sendMessageHandler = () => {\r\n        props.sendMessageHandler();\r\n    }\r\n    const updateNewMessageHandler = (event) => {\r\n        props.updateNewMessageHandler(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className={s.Dialogs}>\r\n            <div className={s.DialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.Messages}>\r\n                { messagesElements }\r\n            </div>\r\n            <div className={s.SendMessage}>\r\n                <textarea rows=\"4\" className={s.SendMessageArea} onChange={updateNewMessageHandler} value={props.currentMessageBody} />\r\n                <button onClick={sendMessageHandler} className={s.SendMessageBtn}>Отправить</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import {Dialogs} from \"./Dialogs\";\r\nimport {updateNewMessageTextCreator, sendMessageCreator} from \"../../Redux/dialogsReducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n// const DialogsContainer = (props) => {\r\n//     let state = props.store.getState();\r\n    \r\n//     const sendMessageHandler = () => {\r\n//         props.store.dispatch(sendMessageCreator());\r\n//     }\r\n//     const updateNewMessageHandler = (value) => {\r\n//         props.store.dispatch(updateNewMessageTextCreator(value));\r\n//     }\r\n\r\n//     return (\r\n//         <Dialogs updateNewMessageHandler={updateNewMessageHandler} sendMessageHandler={sendMessageHandler} \r\n//         dialogs={state.dialogsPage.dialogs} messages={state.dialogsPage.messages} currentMessageBody={state.dialogsPage.currentMessageBody} />\r\n//     );\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        currentMessageBody: state.dialogsPage.currentMessageBody,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewMessageHandler: (value) => {\r\n            dispatch(updateNewMessageTextCreator(value));\r\n        },\r\n        sendMessageHandler: () => {\r\n            dispatch(sendMessageCreator());  \r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;","import React from \"react\";\nimport s from \"./Users.module.css\";\nimport defaultAvatar from \"../../img/user.png\";\nimport { NavLink } from \"react-router-dom\";\n\nexport let Users = (props) => {\n    return (\n        <div className={s.users}>\n               <div className={s.pageButtons}>\n                <span><i onClick={props.handlePreviousPageClick}>&lt;</i>\n                    {props.pageButtons}\n                    <i onClick={props.handleNextPageClick}>&gt;</i></span>\n               </div>\n                {\n                    props.users.map((item) => {\n                        return (\n                            <div className={s.userContainer}>\n                                <div className={s.photoContainer}>\n                                    <NavLink to={`Profile/${item.id}`}>\n                                        <img src={item.photos.small ? item.photos.small : defaultAvatar} alt=\"avatar\" className={s.photo} />\n                                    </NavLink>\n                                    {item.followed === true ? \n                                    <button onClick={() => props.handleUnfollow(item.id)} className={s.button}>Unfollow</button> :\n                                    <button onClick={() => props.handleFollow(item.id)} className={s.button}>Follow</button> }\n                                </div>\n                                <div className={s.aboutUserContainer}>\n                                    <div className={s.userDescriptionContainer}>\n                                        <span className={s.userName}>{item.name }</span>\n                                        <span className={s.userStatus}>{item.status}</span>\n                                    </div>\n                                    <div className={s.locationContainer}>\n                                        <span className={s.userCountry}>{\"item.location.country\"}</span>\n                                        <span className={s.userCity}>{\"item.location.city\"}</span>\n                                    </div>\n                                </div>\n                            </div>\n                        );\n                    })\n                }\n            </div>\n    );\n}"," import React, { Fragment } from 'react';\nimport {Users} from './Users';\nimport {connect} from 'react-redux';\nimport {getUsers, PageButtonClick, arrowPageButtonClick, followUser, unFollowUser} from '../../Redux/usersReducer';\nimport s from './Users.module.css';\nimport Preloader from '../../Preloader';\n\nexport class UsersContainer extends React.Component {\n    componentDidMount() {\n        this.props.getUsers(1, this.props.pageSize);\n    }\n\n    handlePageButtonClick = (item, pageSize) => {\n        this.props.PageButtonClick(item, pageSize)\n    }\n\n    handlePreviousPageClick = (currentPage, pageSize) => {\n        currentPage--;\n        this.props.arrowPageButtonClick(currentPage, pageSize);\n    }\n\n    handleNextPageClick = (currentPage, pageSize) => {\n        currentPage++;\n        this.props.arrowPageButtonClick(currentPage, pageSize);\n    }\n\n    render() {\n        let pagesCount = Math.ceil(this.props.totalCount / this.props.pageSize);\n        let pageButtons = [];\n        for (let i = 0; i < this.props.pageSize; i++) {\n            pageButtons.push(i + 1);\n            (i === this.props.pageSize - 1 && pageButtons.push(pagesCount))\n        }\n        pageButtons = pageButtons.map((item, i) => {\n            if (i === pageButtons.length - 1) \n                return <span onClick={() => this.handlePageButtonClick(item, this.props.pageSize)} className={item === this.props.currentPage ? `${s.pageButton} + ${s.selectedPageButton}` : s.pageButton}><i>... </i>{item}</span>;\n            else \n                return <span onClick={() => this.handlePageButtonClick(item, this.props.pageSize)} className={item === this.props.currentPage ? `${s.pageButton} + ${s.selectedPageButton}` : s.pageButton}>{item}</span>\n        });\n\n        return (\n            <Fragment>\n                { this.props.isFetching ? <Preloader /> : null}\n                <Users handlePreviousPageClick={this.handlePreviousPageClick} handleNextPageClick={this.handleNextPageClick} \n                handleFollow={this.props.followUser} handleUnfollow={this.props.unFollowUser}\n                pageButtons={pageButtons} users={this.props.users}\n                currentPage={this.props.currentPage} />\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        totalCount: state.usersPage.totalCount,\n        currentPage: state.usersPage.currentPage,\n        pageSize: state.usersPage.pageSize,\n        isFetching: state.usersPage.isFetching,\n    }\n}\n\nconst UsersContainerAPI = connect(mapStateToProps, {\n    getUsers,\n    PageButtonClick,\n    arrowPageButtonClick,\n    followUser,\n    unFollowUser,\n})(UsersContainer);\n\nexport default UsersContainerAPI;","import React from 'react';\nimport './App.css';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Navbar from './components/Navbar/Navbar';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport UsersContainerAPI from './components/Users/UsersContainer';\nimport {Route} from \"react-router-dom\"\n\nconst App = (props) => {\n  return (\n      <div className='app-wrapper'>\n        <HeaderContainer />\n        <Navbar />\n        <div className=\"app-wrapper-content\">\n          <Route render={ () => <ProfileContainer /> } path=\"/Profile/:userID?\" />\n          <Route render={ () => <DialogsContainer /> } path=\"/Dialogs\"/>\n          <Route render={ () => <UsersContainerAPI />} path=\"/Users/:userID?\" />\n        </div>\n      </div>\n    );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './index.css';\nimport store from \"./Redux/store-redux\";\nimport App from \"./App\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nexport const render = (state) => {\n    ReactDOM.render(\n        <HashRouter>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </HashRouter>,\n        document.getElementById('root')\n    );\n}\n\nrender(store.getState());\n"],"sourceRoot":""}