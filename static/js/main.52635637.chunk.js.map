{"version":3,"sources":["components/Navbar/Navbar.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Dialogs/Dialogs.module.css","components/Users/Users.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","img/user.png","components/Header/Header.module.css","components/Profile/Profile.module.css","components/Profile/MyPosts/Post/Post.module.css","img/Spinner.svg","components/Dialogs/DialogsItem/DialogsItem.module.css","components/Dialogs/MessagesItem/MessagesItem.module.css","Redux/profileReducer.js","Redux/dialogsReducer.js","Redux/usersReducer.js","Redux/store-redux.js","components/Header/Header.jsx","components/Navbar/Navbar.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/MyPosts/MyPosts.jsx","Preloader.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Dialogs/DialogsItem/DialogsItem.jsx","components/Dialogs/MessagesItem/MessagesItem.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Users/Users.jsx","components/Users/UsersContainer.jsx","App.js","index.js"],"names":["module","exports","initialState","posts","id","text","likesCount","profile","currentText","isFetching","profileReducer","state","action","type","newState","Object","assign","cloneDeep","length","dialogs","name","messages","message","currentMessageBody","dialogsReducer","messageBody","users","pageSize","currentPage","usersReducer","map","item","userId","followed","totalCount","reducers","combineReducers","profilePage","dialogsPage","usersPage","store","createStore","window","Header","className","s","header","img","src","Navbar","nav","navItem","to","href","Post","props","post","MyPostsContainer","connect","dispatch","newText","value","newPostHandler","postsElements","title","subtitle","AddNewPostContainer","PostInputLabel","PostInput","onChange","event","target","rows","AddPostBtn","onClick","Preloader","loader","ProfileInfo","imgContainer","photos","large","defaultAvatar","description","Profile","console","log","ProfileContainer","userID","this","match","params","axios","then","response","setProfile","data","toggleFetching","React","Component","WithUrlProfileContainer","withRouter","DialogsItem","path","MessagesItem","Dialogs","dialogsElements","dialog","messagesElements","DialogsItems","Messages","SendMessage","SendMessageArea","updateNewMessageHandler","sendMessageHandler","SendMessageBtn","DialogsContainer","Users","pageButtons","handlePreviousPageClick","handleNextPageClick","userContainer","photoContainer","small","alt","photo","handleUnfollow","button","handleFollow","aboutUserContainer","userDescriptionContainer","userName","userStatus","status","locationContainer","userCountry","userCity","UsersContainer","handlePageButtonClick","setUsers","items","setCurrentPage","pagesCount","Math","ceil","i","push","pageButton","selectedPageButton","follow","unfollow","UsersContainerAPI","App","render","ReactDOM","document","getElementById","getState"],"mappings":"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","file":"static/js/main.52635637.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"navItem\":\"Navbar_navItem__16nSi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"posts\":\"MyPosts_posts__3tZ1c\",\"title\":\"MyPosts_title__3q_Ko\",\"subtitle\":\"MyPosts_subtitle__2xs3s\",\"PostInputLabel\":\"MyPosts_PostInputLabel__c--yl\",\"PostInput\":\"MyPosts_PostInput__1Ljwk\",\"AddPostBtn\":\"MyPosts_AddPostBtn__2pdsB\",\"AddNewPostContainer\":\"MyPosts_AddNewPostContainer__2sPCl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Dialogs\":\"Dialogs_Dialogs__1HvdP\",\"DialogsItems\":\"Dialogs_DialogsItems__LIXpe\",\"Messages\":\"Dialogs_Messages__2OSA1\",\"SendMessage\":\"Dialogs_SendMessage__1NwkL\",\"SendMessageArea\":\"Dialogs_SendMessageArea__HC-UV\",\"SendMessageBtn\":\"Dialogs_SendMessageBtn__3of2E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__2Iv27\",\"pageButtons\":\"Users_pageButtons__1q9F3\",\"pageButton\":\"Users_pageButton__1ZjBo\",\"selectedPageButton\":\"Users_selectedPageButton__3I9sU\",\"userContainer\":\"Users_userContainer__1Ycei\",\"aboutUserContainer\":\"Users_aboutUserContainer__Tb5P-\",\"userDescriptionContainer\":\"Users_userDescriptionContainer__2XS4y\",\"locationContainer\":\"Users_locationContainer__1oxmJ\",\"photoContainer\":\"Users_photoContainer__2PJTc\",\"photo\":\"Users_photo__2hOPg\",\"button\":\"Users_button__1saaY\",\"userName\":\"Users_userName__1mt5V\",\"userStatus\":\"Users_userStatus__3dsIO\",\"userCountry\":\"Users_userCountry__6nBlk\",\"userCity\":\"Users_userCity__2cNhS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ProfileInfo\":\"ProfileInfo_ProfileInfo__34LEF\",\"imgContainer\":\"ProfileInfo_imgContainer__1Au_4\",\"img\":\"ProfileInfo_img__1lpBU\"};","module.exports = __webpack_public_path__ + \"static/media/user.da338dae.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"img\":\"Header_img__3ifQS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Profile\":\"Profile_Profile__3HF8E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__A0EJd\"};","module.exports = __webpack_public_path__ + \"static/media/Spinner.9064981b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DialogsItem\":\"DialogsItem_DialogsItem__16bfh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MessagesItem\":\"MessagesItem_MessagesItem__34gIN\"};","import {cloneDeep} from \"lodash\";\n\nconst ADD_POST = \"ADD_POST\";\nconst NEW_TEXT = \"NEW_TEXT\";\nconst TOGGLE_FETCHING = \"TOGGLE_FETCHING\";\nconst SET_PROFILE = \"SET_PROFILE\";\n\nconst initialState = {\n    posts: [{\n            id: 1,\n            text: 'Hi, how are you?',\n            likesCount: 12\n        },\n        {\n            id: 2,\n            text: 'It\\'s my first post',\n            likesCount: 11\n        },\n        {\n            id: 3,\n            text: 'Blabla',\n            likesCount: 3\n        },\n        {\n            id: 4,\n            text: 'Dada',\n            likesCount: 11\n        }\n    ],\n    profile: null,\n    currentText: \"Some text\",\n    isFetching: true,\n}\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case NEW_TEXT: {\n            let newState = Object.assign({}, state);\n            newState.currentText = action.text;\n\n            return newState;\n        }\n        case ADD_POST: {\n            let newState = cloneDeep(state);\n            newState.posts = [...state.posts, {\n                id: state.posts.length + 1,\n                text: state.currentText,\n                likesCount: state.posts.length + 1,\n            }];\n            newState.currentText = \"\";\n            debugger;   \n            return newState;\n        }\n        case SET_PROFILE: {\n            debugger;\n            return {...state, profile: action.profile}\n        }\n        case TOGGLE_FETCHING: {\n            return {\n                ...state,\n                isFetching: action.isFetching,\n            }\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport const addPostActionCreator = () => {\n    return {\n        type: ADD_POST,\n    }\n}\n\nexport const newTextActionCreator = (text) => {\n    return {\n        type: NEW_TEXT,\n        text: text,\n    }\n}\n\nexport const setProfile = (profile) => {\n    return {\n        type: SET_PROFILE,\n        profile,\n    }\n}\n\nexport const toggleFetching = (isFetching) => {\n    return {\n        type: TOGGLE_FETCHING,\n        isFetching,\n    }\n}\n\nexport default profileReducer;","import {cloneDeep} from 'lodash';\n\nconst UPDATE_NEW_MESSAGE_TEXT = \"UPDATE_NEW_MESSAGE_TEXT\";\nconst SEND_MESSAGE = \"SEND_MESSAGE\";\n\nconst initialState = {\n        dialogs: [\n            {id: 1, name: 'Dimych'},\n            {id: 2, name: 'Andrew'},\n            {id: 3, name: 'Sveta'},\n            {id: 4, name: 'Sasha'},\n            {id: 5, name: 'Viktor'},\n            {id: 6, name: 'Valera'}\n        ],\n        \n        messages: [\n            {id: 1, message: 'Hi'},\n            {id: 2, message: 'How is your it-kamasutra?'},\n            {id: 3, message: 'Yo'},\n            {id: 4, message: 'Yo'},\n            {id: 5, message: 'Yo'}\n        ],\n        currentMessageBody: \"\"\n}\n\nconst dialogsReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case UPDATE_NEW_MESSAGE_TEXT: {\n            let newState = cloneDeep(state);\n            newState.currentMessageBody = action.messageBody;\n            return newState;\n        }\n        case SEND_MESSAGE: {\n            let newState = cloneDeep(state);\n            newState.messages = [...state.messages, \n                {\n                    id: state.messages.length + 1, \n                    message: state.currentMessageBody\n                }];\n                newState.currentMessageBody = \"\";\n            return newState;\n        }\n        default: {\n            return state;\n        }\n    }\n}\n\nexport const updateNewMessageTextCreator = (text) => {\n    return {\n        type: UPDATE_NEW_MESSAGE_TEXT,\n        messageBody: text,\n    }\n}\n\nexport const sendMessageCreator = () => {\n    return {\n        type: SEND_MESSAGE,\n    }\n}\n\nexport default dialogsReducer;","const FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst TOGGLE_FETCHING = \"TOGGLE_FETCHING\";\nconst SET_PAGE_SIZE = \"SET_PAGE_SIZE\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\n\nconst initialState = {\n        users: [],\n        pageSize: 5,\n        currentPage: 1,\n        isFetching: true,\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch(action.type) {\n        case FOLLOW: {\n            return {\n                ...state,\n                users: state.users.map((item) => {\n                    if (item.id === action.userId) item.followed = true;\n                    return item;\n                }),\n            }\n        }\n        case UNFOLLOW: {\n            return {\n                ...state,\n                users: state.users.map((item) => {\n                    if (item.id === action.userId) item.followed = false;\n                    return item;\n                }),\n            }\n        }\n        case SET_USERS: {\n            return {\n                ...state,\n                users: action.users,\n                totalCount: action.totalCount,\n                currentPage: action.currentPage,\n            }\n        }\n        case TOGGLE_FETCHING: {\n            return {\n                    ...state,\n                    isFetching: action.isFetching,\n            }\n        }\n        case SET_CURRENT_PAGE: {\n            return {\n                ...state,\n                currentPage: action.currentPage,\n            }\n        }\n        default: return state;\n    }\n}\n\nexport const follow = (userId) => ({\n    type: FOLLOW, \n    userId \n})\nexport const unfollow = (userId) => ({\n    type: UNFOLLOW,\n    userId \n})\nexport const setUsers = (users, totalCount) => ({\n    type: SET_USERS,\n    users,\n    totalCount,\n})\nexport const toggleFetching = (isFetching) => ({\n    type: TOGGLE_FETCHING,\n    isFetching,\n});\nexport const setPagesize = (pageSize) => ({\n    type: SET_PAGE_SIZE,\n    pageSize,\n});\nexport const setCurrentPage = (currentPage) => ({\n    type: SET_CURRENT_PAGE,\n    currentPage,\n});\nexport default usersReducer;","import {createStore, combineReducers} from \"redux\";\nimport profileReducer from \"./profileReducer\";\nimport dialogsReducer from \"./dialogsReducer\";\nimport usersReducer from \"./usersReducer\";\n\nlet reducers = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    usersPage: usersReducer,\n});\n\nlet store = createStore(reducers);\n\nwindow.store = store;\n\nexport default store;","import React from 'react';\r\nimport s from \"./Header.module.css\";\r\n\r\nconst Header = () => {\r\n    return <header className={s.header}>\r\n        <img className={s.img} src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport s from \"./Navbar.module.css\";\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.navItem}>\r\n                <NavLink to=\"/Profile\">Profile</NavLink>\r\n            </div>\r\n            <div className={s.navItem}>\r\n                <NavLink to=\"/Dialogs\">Messages</NavLink>\r\n            </div>\r\n            <div className={s.navItem}>\r\n                <a href=\"/Users\">Users</a>\r\n            </div>\r\n            <div className={s.navItem}>\r\n                <a href=\"#\">News</a>\r\n            </div>\r\n            <div className={s.navItem}>\r\n                <a href=\"#\">Music</a>\r\n            </div>\r\n            <div className={s.navItem}>\r\n                <a href=\"#\">Settings</a>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nexport const Post = (props) => {\r\n  return (\r\n    <div className={s.post}>\r\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n        {props.text}\r\n      <div>\r\n        <span>like { props.likesCount }</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import {MyPosts} from \"./MyPosts\";\r\nimport {addPostActionCreator, newTextActionCreator} from \"../../../Redux/profileReducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    currentText: state.profilePage.currentText,\r\n    posts: state.profilePage.posts,\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    newText: (value) => {\r\n      dispatch(newTextActionCreator(value));\r\n    },\r\n    newPostHandler: () => {\r\n      dispatch(addPostActionCreator());\r\n    },\r\n  }\r\n}\r\n\r\nexport const MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport {Post} from \"./Post/Post\";\r\n\r\nexport const MyPosts = (props) => {\r\n  let postsElements = props.posts.map((item) => <Post text={item.text} likesCount={item.likesCount}/>);\r\n  \r\n  const newPostHandler = () => {\r\n    props.newPostHandler();\r\n  }\r\n  \r\n  const newText = (event) => {\r\n    props.newText(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className={s.posts}>\r\n      <div className={s.title}>\r\n        <span className={s.subtitle}>My posts:</span>\r\n      </div>\r\n\r\n      {postsElements}\r\n\r\n      <div className={s.AddNewPostContainer}>\r\n        <label className={s.PostInputLabel}>\r\n          New Post\r\n          <br />\r\n          <textarea className={s.PostInput} onChange={newText} value={props.currentText} rows=\"4\" />\r\n        </label>\r\n        <button className={s.AddPostBtn} onClick={newPostHandler}>Добавить запись</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\nimport loader from '../src/img/Spinner.svg';\n\nlet Preloader = () => {\n    return (\n        <div>\n            <img src={loader} />\n        </div>\n    );\n}\n\nexport default Preloader;","import React from 'react';\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Preloader from '../../../Preloader';\r\nimport defaultAvatar from \"../../../img/user.png\";\r\n\r\nexport const ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n      return <Preloader />\r\n  }\r\n  \r\n  return (\r\n    <div className={s.ProfileInfo}>\r\n      <div className={s.imgContainer}>\r\n        <img className={s.img} src={props.profile.photos.large ? props.profile.photos.large : defaultAvatar} />\r\n      </div>\r\n      <div className={s.description}>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport s from \"./Profile.module.css\";\r\nimport {MyPostsContainer} from \"./MyPosts/MyPostsContainer\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n  debugger;\r\n  console.log(props);\r\n  return (\r\n    <div className={s.Profile}>\r\n      <ProfileInfo profile={props.profile} />\r\n        <div>\r\n          <MyPostsContainer />\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;","import React, { Fragment } from 'react';\r\nimport Profile from './Profile';\r\nimport * as axios from 'axios';\r\nimport {connect} from 'react-redux';\r\nimport {setProfile, toggleFetching} from '../../Redux/profileReducer';\r\nimport Preloader from '../../Preloader';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nclass ProfileContainer extends React.Component {\r\n  componentDidMount() {\r\n    let userID = this.props.match.params.userID;\r\n    if (!userID) userID = 2;\r\n    axios.get(`https://social-network.samuraijs.com/api/1.0/profile/${userID}`)\r\n        .then(response => {\r\n            this.props.setProfile(response.data);\r\n            this.props.toggleFetching(false);\r\n        });\r\n}\r\n  \r\n  render() {\r\n    debugger;\r\n    console.log(this.props);\r\n    return(\r\n      <Fragment>\r\n        { this.props.isFetching ? <Preloader /> : null}\r\n        <Profile {...this.props} profile={this.props.profile} />\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isFetching: state.profilePage.isFetching,\r\n    profile: state.profilePage.profile,\r\n  }\r\n}\r\n\r\nlet WithUrlProfileContainer = withRouter(ProfileContainer);\r\n\r\nexport default connect(mapStateToProps, {setProfile, toggleFetching,})(WithUrlProfileContainer);","import React from \"react\";\r\nimport s from \"./DialogsItem.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const DialogsItem = (props) => {\r\n    const path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.DialogsItem}>\r\n            <NavLink to={path}>\r\n                {props.name}\r\n            </NavLink>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport s from \"./MessagesItem.module.css\";\r\n\r\nexport const MessagesItem = (props) => {\r\n    return (\r\n        <div className={s.MessagesItem}>\r\n            {props.message}\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport s from \"./Dialogs.module.css\";\r\nimport {DialogsItem} from \"./DialogsItem/DialogsItem\";\r\nimport {MessagesItem} from \"./MessagesItem/MessagesItem\";\r\n\r\nexport const Dialogs = (props) => {\r\n    const dialogsElements = props.dialogs.map((dialog) => <DialogsItem name={dialog.name} id={dialog.id} />);\r\n    const messagesElements = props.messages.map((message) => <MessagesItem id={message.id} message={message.message}/>);\r\n    const sendMessageHandler = () => {\r\n        props.sendMessageHandler();\r\n    }\r\n    const updateNewMessageHandler = (event) => {\r\n        props.updateNewMessageHandler(event.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className={s.Dialogs}>\r\n            <div className={s.DialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.Messages}>\r\n                { messagesElements }\r\n            </div>\r\n            <div className={s.SendMessage}>\r\n                <textarea rows=\"4\" className={s.SendMessageArea} onChange={updateNewMessageHandler} value={props.currentMessageBody} />\r\n                <button onClick={sendMessageHandler} className={s.SendMessageBtn}>Отправить</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import {Dialogs} from \"./Dialogs\";\r\nimport {updateNewMessageTextCreator, sendMessageCreator} from \"../../Redux/dialogsReducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\n// const DialogsContainer = (props) => {\r\n//     let state = props.store.getState();\r\n    \r\n//     const sendMessageHandler = () => {\r\n//         props.store.dispatch(sendMessageCreator());\r\n//     }\r\n//     const updateNewMessageHandler = (value) => {\r\n//         props.store.dispatch(updateNewMessageTextCreator(value));\r\n//     }\r\n\r\n//     return (\r\n//         <Dialogs updateNewMessageHandler={updateNewMessageHandler} sendMessageHandler={sendMessageHandler} \r\n//         dialogs={state.dialogsPage.dialogs} messages={state.dialogsPage.messages} currentMessageBody={state.dialogsPage.currentMessageBody} />\r\n//     );\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogs: state.dialogsPage.dialogs,\r\n        messages: state.dialogsPage.messages,\r\n        currentMessageBody: state.dialogsPage.currentMessageBody,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateNewMessageHandler: (value) => {\r\n            dispatch(updateNewMessageTextCreator(value));\r\n        },\r\n        sendMessageHandler: () => {\r\n            dispatch(sendMessageCreator());  \r\n        }\r\n    }\r\n}\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\r\n\r\nexport default DialogsContainer;","import React from \"react\";\nimport s from \"./Users.module.css\";\nimport defaultAvatar from \"../../img/user.png\";\nimport { NavLink } from \"react-router-dom\";\n\nexport let Users = (props) => {\n    debugger;\n    console.log(props);\n    return (\n        <div className={s.users}>\n               <div className={s.pageButtons}>\n                <span><i onClick={props.handlePreviousPageClick}>&lt;</i>\n                    {props.pageButtons}\n                    <i onClick={props.handleNextPageClick}>&gt;</i></span>\n               </div>\n                {\n                    props.users.map((item) => {\n                        return (\n                            <div className={s.userContainer}>\n                                <div className={s.photoContainer}>\n                                    <NavLink to={`Profile/${item.id}`}>\n                                        <img src={item.photos.small ? item.photos.small : defaultAvatar} alt=\"avatar\" className={s.photo} />\n                                    </NavLink>\n                                    {item.followed === true ? \n                                    <button onClick={() => props.handleUnfollow(item.id)} className={s.button}>Unfollow</button> :\n                                    <button onClick={() => props.handleFollow(item.id)} className={s.button}>Follow</button> }\n                                </div>\n                                <div className={s.aboutUserContainer}>\n                                    <div className={s.userDescriptionContainer}>\n                                        <span className={s.userName}>{item.name }</span>\n                                        <span className={s.userStatus}>{item.status}</span>\n                                    </div>\n                                    <div className={s.locationContainer}>\n                                        <span className={s.userCountry}>{\"item.location.country\"}</span>\n                                        <span className={s.userCity}>{\"item.location.city\"}</span>\n                                    </div>\n                                </div>\n                            </div>\n                        );\n                    })\n                }\n            </div>\n    );\n}","import React, { Fragment } from 'react';\nimport {Users} from './Users';\nimport {connect} from 'react-redux';\nimport {follow, unfollow, setUsers, toggleFetching, setCurrentPage} from '../../Redux/usersReducer';\nimport * as axios from 'axios';\nimport s from './Users.module.css';\nimport Preloader from '../../Preloader';\n\nexport class UsersContainer extends React.Component {\n    componentDidMount() {\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?count=${this.props.pageSize}`)\n        .then(response => {\n            this.props.setUsers(response.data.items, response.data.totalCount);\n            this.props.setCurrentPage(1);\n            this.props.toggleFetching(false);\n        });\n    }\n\n    handlePageButtonClick = (item, pageSize) => {\n        this.props.toggleFetching(true);\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${item}&count=${pageSize}`)\n        .then(response => {\n            this.props.setUsers(response.data.items, response.data.totalCount);\n            this.props.setCurrentPage(item);\n            this.props.toggleFetching(false);\n        });\n    }\n\n    handlePreviousPageClick = (currentPage, pageSize) => {\n        this.props.toggleFetching(true);\n        currentPage--;\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${currentPage}&count=${pageSize}`)\n        .then(response => {\n            this.props.setUsers(response.data.items, response.data.totalCount);\n            this.props.setCurrentPage(currentPage);\n            this.props.toggleFetching(false);\n        });\n    }\n\n    handleNextPageClick = (currentPage, pageSize) => {\n        this.props.toggleFetching(true);\n        currentPage++;\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${currentPage}&count=${pageSize}`)\n        .then(response => {\n            this.props.setUsers(response.data.items, response.data.totalCount);\n            this.props.setCurrentPage(currentPage);\n            this.props.toggleFetching(false);\n            debugger;\n        });\n    }\n\n    render() {\n        let pagesCount = Math.ceil(this.props.totalCount / this.props.pageSize);\n        let pageButtons = [];\n        for (let i = 0; i < this.props.pageSize; i++) {\n            pageButtons.push(i + 1);\n            (i === this.props.pageSize - 1 && pageButtons.push(pagesCount))\n        }\n        pageButtons = pageButtons.map((item, i) => {\n            if (i === pageButtons.length - 1) \n                return <span onClick={() => this.handlePageButtonClick(item, this.props.pageSize)} className={item === this.props.currentPage ? `${s.pageButton} + ${s.selectedPageButton}` : s.pageButton}><i>... </i>{item}</span>;\n            else \n                return <span onClick={() => this.handlePageButtonClick(item, this.props.pageSize)} className={item === this.props.currentPage ? `${s.pageButton} + ${s.selectedPageButton}` : s.pageButton}>{item}</span>\n        });\n\n        return (\n            <Fragment>\n                { this.props.isFetching ? <Preloader /> : null}\n                <Users handlePreviousPageClick={this.handlePreviousPageClick} handleNextPageClick={this.handleNextPageClick} \n                handleFollow={this.props.follow} handleUnfollow={this.props.unfollow} \n                pageButtons={pageButtons} users={this.props.users}\n                currentPage={this.props.currentPage} />\n            </Fragment>\n        );\n    }\n}\n\n\n\nconst mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        totalCount: state.usersPage.totalCount,\n        currentPage: state.usersPage.currentPage,\n        pageSize: state.usersPage.pageSize,\n        isFetching: state.usersPage.isFetching,\n    }\n}\n\n\n\nconst UsersContainerAPI = connect(mapStateToProps, {\n    follow,\n    unfollow,\n    setUsers,\n    toggleFetching,\n    setCurrentPage,\n})(UsersContainer);\n\nexport default UsersContainerAPI;","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Navbar from './components/Navbar/Navbar';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\nimport UsersContainerAPI from './components/Users/UsersContainer';\nimport {Route} from \"react-router-dom\"\n\nconst App = (props) => {\n  return (\n      <div className='app-wrapper'>\n        <Header />\n        <Navbar />\n        <div className=\"app-wrapper-content\">\n          <Route render={ () => <ProfileContainer /> } path=\"/Profile/:userID?\" />\n          <Route render={ () => <DialogsContainer /> } path=\"/Dialogs\"/>\n          <Route render={ () => <UsersContainerAPI />} path=\"/Users/:userID?\" />\n        </div>\n      </div>\n    );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport './index.css';\nimport store from \"./Redux/store-redux\";\nimport App from \"./App\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nexport const render = (state) => {\n    ReactDOM.render(\n        <BrowserRouter>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </BrowserRouter>, \n        document.getElementById('root')\n    );\n}\n\nrender(store.getState());\n"],"sourceRoot":""}